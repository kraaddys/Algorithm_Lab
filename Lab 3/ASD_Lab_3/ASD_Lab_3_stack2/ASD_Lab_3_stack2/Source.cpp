#include <stdlib.h>
#include <iostream>

using namespace std;
// Подключаются заголовочные файлы: 
//stdlib.h - стандартная библиотека, позволяющая использовать функции и типы данных.
//iostream - функция ввода/вывода данных в консоль.

int* stackMemory1()
{
    int a = 1;
    return &a;
}
//Объявление функции stackMemory1, и возвращает указатель на целое число (int*).
//Затем, внутри функции создается локальная переменная а и к ней присваивается значение 1.
//Затем функция возвращает адрес переменной a. 
//Таким образом, функция возвращает указатель на локальную переменную a.
//Однако a - это локальная переменная функции, и она будет уничтожена при завершении функции, 
//что может вызвать проблемы при разыменовании указателя.

int* stackMemory2()
{
    int b = 2;
    return &b;
}
//Данная функция выполняет те же действия, что и предыдущая, разница в том, что она называется по-другому
//и создается целочисленная переменная b, которой было присвоено значение 2.
//Затем функция возвращает адрес переменной b.

int main()
{
    int* b = stackMemory1();
    int a1 = *b; // 1
    //Вход в функцию main. Вызов функции stackMemory1 и сохранение возвращенного указателя в переменной b.
    //Затем разыменование указателя b и присвоение результат в a1, что приведет к получению значения 1.
    int* c = stackMemory2();
    int a2 = *c; // 2
    //Вызов функции stackMemory2 и сохранение возвращенного указателя в переменной c. 
    //Разыменование указателя c и присвоение результат в a2, что приведет к получению значения 2.

    int a3 = *b; // 2
    //Попытка разыменования указателя b после завершения вызванной функции stackMemory1. 
    //Это может вызвать неопределенное поведение, но в данном случае получается значение 2.


    std::cout << a1 << std::endl; // prints 1
    std::cout << a2 << std::endl; // prints 2
    std::cout << a3 << std::endl; // prints 2
    //Вывод на экран значении переменных а1, а2, а3.


    std::cout << ((std::byte*)b - (std::byte*)c) << std::endl; // prints 0, pointers are equal
    //Вычисление разницы между значениями, на которые указывают указатели b и c, с использованием арифметики указателей 
    //и вывод этой разницы на экран. Однако, в данном случае, может возникнуть недопонимание. Например, в Visual Studio
    //такая запись выдает ошибку.


    return 0;
}